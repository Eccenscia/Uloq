/* 
 * Uloq Requestor Service
 *
 * Requestor Endpoints
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Uloq.SDK.Eccenscia.Services.Models.OpenAPIDateConverter;

namespace Uloq.SDK.Eccenscia.Services.Models.UloqRequestor
{
    /// <summary>
    /// OutcomesObject
    /// </summary>
    [DataContract]
    public partial class OutcomesObject : IEquatable<OutcomesObject>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OutcomesObject" /> class.
        /// </summary>
        /// <param name="statusCode">statusCode.</param>
        /// <param name="success">success.</param>
        /// <param name="message">message.</param>
        public OutcomesObject(decimal statusCode = default, bool success = default, string message = default)
        {
            StatusCode = statusCode;
            Success = success;
            Message = message;
        }

        /// <summary>
        /// Gets or Sets StatusCode
        /// </summary>
        [DataMember(Name = "StatusCode", EmitDefaultValue = false)]
        public decimal StatusCode { get; set; }

        /// <summary>
        /// Gets or Sets Success
        /// </summary>
        [DataMember(Name = "Success", EmitDefaultValue = false)]
        public bool Success { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "Message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OutcomesObject {\n");
            sb.Append("  StatusCode: ").Append(StatusCode).Append("\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as OutcomesObject);
        }

        /// <summary>
        /// Returns true if OutcomesObject instances are equal
        /// </summary>
        /// <param name="input">Instance of OutcomesObject to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OutcomesObject input)
        {
            if (input == null)
                return false;

            return
                (
                    StatusCode == input.StatusCode ||
                    StatusCode.Equals(input.StatusCode)
                ) &&
                (
                    Success == input.Success ||
                    Success.Equals(input.Success)
                ) &&
                (
                    Message == input.Message ||
                    Message != null &&
                    Message.Equals(input.Message)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + StatusCode.GetHashCode();
                hashCode = hashCode * 59 + Success.GetHashCode();
                if (Message != null)
                    hashCode = hashCode * 59 + Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
